1. Write a program in Python to allow the error of syntax to be handled using exception handling.

try:
    eval('x === x')
except SyntaxError:
    print ("You cannot do x===x ")
finally:
    print("Syntax error has been handled")


2. Write a program in Python to allow the user to open a file by using the argv module. If the
entered name is incorrect throw an exception and ask them to enter the name again. Make sure
to use read only mode.

from sys import argv
try:
    # a=input("Enter the file name:")
    script,filename = argv
    txt = open(filename)
    print (txt.read())

except FileNotFoundError:
    print("File not found")
else:
    print("Requested file is already opened")

finally:
    txt.close()


3. Write a program to handle an error if the user entered a number more than four digits it should
return “The length is too short/long !!! Please provide only four digits”

# try:
a = int(input("Enter a 4 digit integer: "))
if len(str(a))!=4:
    raise Exception("Please enter 4 digits only")


4. Create a login page backend to ask users to enter the username and password. Make sure to
ask for a Re-Type Password and if the password is incorrect give chance to enter it again but it
should not be more than 3 times.

cred = {"user1":"88312318","user2":"123456789"}
counter = 0

print(cred.keys()) # This is to know what are the users in our dictionary
counter = 0
for i in range(3):
    user = input("Enter the username: ")
    pswd = input("Enter the username: ")
    if (user, pswd) in cred.items():
        print("Welcome {}!".format(user))
        break
    else:
        print("You have entered wrong credentials, Please try again!")
        counter += 1

    if counter == 3:
        raise Exception("You exceed the Maximum limit")


5. Go through the link provided below to understand finally and raise concept:

Finally is used after the try and exception block which executes fix line of code for sure.
For example if we are working with the file operation and we opened a file for reading but for some reasons, exception occures,
the file will remain open. Hence to free up the resources after our work is done, we use finaly keyword.

Raise keyword is used for raising the exception for perticular condition.
for example, if the value of variable is negative, we can use raise keyword to raise an exception for negative value of variables.

6. Read doc.txt file using Python File handling concept and return only the even length string from
the file. Consider the content of doc.txt as given below:

with open("doc.txt") as f:
    for line in f:
        a=line.split(" ")
        # print(a)
        for i in a:
            # i.split(" ")
            if len(i)%2==0:
                print(i)




